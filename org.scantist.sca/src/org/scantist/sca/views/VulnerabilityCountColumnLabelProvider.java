package org.scantist.sca.views;

import org.apache.commons.lang3.StringUtils;
import org.eclipse.jface.resource.JFaceResources;
import org.eclipse.jface.viewers.ViewerCell;
import org.eclipse.swt.SWT;
import org.eclipse.swt.custom.StyleRange;
import org.eclipse.swt.graphics.Color;
import org.eclipse.swt.widgets.Display;

import org.scantist.sca.model.ComponentModel;

public class VulnerabilityCountColumnLabelProvider extends ComponentTableColumnLabelProvider {
	private final ComponentTableContentProvider dependencyTableViewCp;

	public VulnerabilityCountColumnLabelProvider(final ComponentTableContentProvider dependencyTableViewCp) {
		super();
		this.dependencyTableViewCp = dependencyTableViewCp;
	}

	public VulnerabilityCountColumnLabelProvider(final int width, final int alignment,
			final ComponentTableContentProvider dependencyTableViewCp) {
		super(width, alignment);
		this.dependencyTableViewCp = dependencyTableViewCp;
	}

	@Override
	public String getText(final Object input) {
		if (input instanceof ComponentModel) {
			final int vulnSeverityCount = ((ComponentModel) input).getVulnerabilityCount();
			final String text = vulnSeverityCount < 1000 ? vulnSeverityCount + "" : "999+";
			return text;
		}
		return "";
	}

	@Override
	public String getTitle() {
		return "Vulnerability Count";
	}

	public ComponentTableContentProvider getDependencyTableViewCp() {
		return this.dependencyTableViewCp;
	}

	@Override
	public void styleCell(final ViewerCell cell) {
		if (cell.getText().equals(VALUE_UNKNOWN)) {
			cell.setText("");
			return;
		}
		final String vulnChunks = cell.getText();
		cell.setFont(JFaceResources.getTextFont());
		final Display display = Display.getCurrent();
		final String noVulns = "0";
		final Color textColor = display.getSystemColor(SWT.COLOR_WHITE);
		final Color mediumColor = decodeHex(display, "#eca4a0");
		final Color invisible = display.getSystemColor(SWT.COLOR_WIDGET_BACKGROUND);
		final StyleRange[] styleRanges = new StyleRange[1];

		cell.setText(String.format("%-5s", vulnChunks));

		if (vulnChunks.equals(noVulns)) {
			styleRanges[0] = new StyleRange(0, vulnChunks.length(), invisible, invisible);
		} else {
			styleRanges[0] = new StyleRange(0, vulnChunks.length(), textColor, mediumColor);
		}

		cell.setStyleRanges(styleRanges);
	}

}
